name: Deploy to GitHub Pages (Advanced)

# ‚ö†Ô∏è DISABLED BY DEFAULT - Use deploy-preview.yml instead
# This workflow is an alternative using GitHub's native deploy-pages action.
# To use this workflow:
#   1. Rename deploy-preview.yml to deploy-preview.yml.disabled
#   2. Remove this comment block
#   3. Go to Settings ‚Üí Pages ‚Üí Source ‚Üí Select "GitHub Actions"
#   4. Push to trigger this workflow

on:
  push:
    branches:
      - disabled-by-default  # Change to 'main' to enable
  pull_request:
    types: [opened, synchronize, reopened, closed]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow one concurrent deployment per branch/PR
concurrency:
  group: "pages-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    # Skip build if PR is being closed
    if: github.event.action != 'closed'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Build project
        run: npm run build
        env:
          # Set base path for PR previews
          BASE_PATH: ${{ github.event_name == 'pull_request' && format('/pr-{0}/', github.event.pull_request.number) || '/' }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job for main branch
  deploy-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deployment job for PR previews
  deploy-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: artifact

      - name: Extract artifact
        run: |
          cd artifact
          tar -xvf artifact.tar
          rm artifact.tar

      - name: Deploy PR preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_DIR="gh-pages-branch/pr-${PR_NUMBER}"

          # Create or update PR preview directory
          mkdir -p "${PR_DIR}"
          rm -rf "${PR_DIR}"/*
          cp -r artifact/* "${PR_DIR}/"

          cd gh-pages-branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy PR #${PR_NUMBER} preview" || echo "No changes to commit"
          git push

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const preview_url = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${pr_number}/`;

            const comment_body = `## üöÄ Preview Deployment

            Your PR has been deployed to GitHub Pages!

            **Preview URL:** ${preview_url}

            The preview will be updated automatically when you push new commits.

            ---
            <sub>ü§ñ Deployed by [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})</sub>`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('Preview Deployment')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment_body,
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment_body,
              });
            }

  # Cleanup job when PR is closed
  cleanup-preview:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch

      - name: Remove PR preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_DIR="gh-pages-branch/pr-${PR_NUMBER}"

          if [ -d "${PR_DIR}" ]; then
            rm -rf "${PR_DIR}"
            cd gh-pages-branch
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Remove PR #${PR_NUMBER} preview" || echo "No changes to commit"
            git push
          fi

      - name: Comment PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: 'üßπ Preview deployment has been cleaned up.',
            });
